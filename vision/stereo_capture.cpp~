#include <stdio.h>
#include <string.h>
#include <time.h>
#include <opencv/cv.h>
#include <opencv/highgui.h>
#include <opencv/cvaux.h>
#include <opencv/cvwimage.h>
#include <opencv/cxcore.h>
#include <opencv/cxmisc.h>
#include <opencv/ml.h>

#define LEFT_CAP 1
#define RIGHT_CAP 2

//g++ stereo_capture.cpp `pkg-config --cflags --libs opencv-2.3.1` -o stereo_capture

using namespace cv;

int n_images;
int save_count = 0;
char file_l[64];
char file_r[64];
Mat l_frame, r_frame;

int main(int argc, char ** argv)
{
  if( argc != 2 ) {
      printf("ERROR: Wrong number of input parameters\n");
      return -1;
  }
    
  n_images = atoi( argv[1] );
  
  VideoCapture  left_cap(LEFT_CAP); // Abre a camera 0 e bota m cap
  VideoCapture right_cap(RIGHT_CAP); // Abre a camera 0 e bota m cap
  if(!left_cap.isOpened()) return 1;// checa se capturou
  if(!right_cap.isOpened()) return 2;// checa se capturou

  while(n_images != 0)
  {
    left_cap >>  l_frame;
    right_cap >> r_frame;

    imshow("Left", l_frame);    //camera 1
    imshow("Right", r_frame);    //camera 2
  
    if(waitKey(30) >= 100) break;   //apertar um bot√£o por algum tempo finaliza as cameras

    //iteration counter
    save_count++;
    
    //almost there
    if(save_count == 20) 
      printf("\n\nGet ready...\n");
    
    //Time to save image...
    if(save_count == 50) {
      printf("Capturing image...\n");
      save_count = 0;
      
      sprintf(file_l, "images/left%d.png", n_images);
      sprintf(file_r, "images/right%d.png", n_images);

      imwrite(file_l, l_frame);
      imwrite(file_r, r_frame);
      
      n_images--;
      printf("Done, %d to go\n", n_images);
    }
    
    
  } 
  
  return(0);
}